# Default datbase configuration

# Select database type that will be used
# Possible options: in_memory, file_storage, mongodb, postgresql
databaseType = mongodb
//databaseType = in_memory

# In the following blocks, the different database types are configured.
# Only the configuration that was selected with `databaseType = ...` above has to be provided here.
# The other (not-selected) database configuration blocks are just listed for reference.

# Volatile in-memory storage (e.g. for unit/integration testing)
inMemory = {

}

# A storage driver that utilizes the filesystem tree to store the data.
# Used for testing or development
# TODO-Future
fileStorage = {
    path = "data"
}

# Recommended storage driver that stores data in MongoDB. MongoDB Community Edition is supported.
mongodb = {
    # Refer to https://www.mongodb.com/docs/manual/reference/connection-string/
    connectionString = "mongodb://root:password@mongo:27017/"

    # Connection String quick reference:
    # - if username/password contain special characters, they must be converted with percent encoding (RFC3986 2.1)
    #
    # Format: mongodb+srv://[username:password@]host[/[defaultauthdb][?options]]
    #
    # EXAMPLES:
    #
    # Standard:
    # 1. Standalone:   mongodb://user:password@host:port/
    # 2. Shared cluster: mongodb://user:password@host1:port1,host2:port2,host3:port3/   (`mongos` hosts in connection string)
    # 3. Replica set: mongodb://user:password@host1:port1,host2:port2,host3:port3/?&replicaSet=replicaSetName
    #
    # SRV format (see https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-connections-dns-seedlist)
    # "DNS-constructed seed list to construct available servers list"
    # Examples: same as above, with `mongodb+srv://` instead of `mongodb://`

    # Database name
    database = "waltid-enterprise"
}

# A production-grade storage driver that stores data in PostgreSQL.
# Requires the ltree extension to be loaded, and json/jsonb data types to be available.
# TODO-Future
postgres = {

}
